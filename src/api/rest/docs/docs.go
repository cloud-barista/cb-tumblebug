// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://cloud-barista.github.io",
            "email": "contact-to-cloud-barista@googlegroups.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/config": {
            "get": {
                "description": "List all configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System environment"
                ],
                "summary": "List all configs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.RestGetAllConfigResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create or Update config (SPIDER_REST_URL, DRAGONFLY_REST_URL, ...)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System environment"
                ],
                "summary": "Create or Update config",
                "parameters": [
                    {
                        "description": "Key and Value for configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.ConfigReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ConfigInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Init all configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System environment"
                ],
                "summary": "Init all configs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/config/{configId}": {
            "get": {
                "description": "Get config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System environment"
                ],
                "summary": "Get config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Config ID",
                        "name": "configId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ConfigInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Init config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System environment"
                ],
                "summary": "Init config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Config ID",
                        "name": "configId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ConfigInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/connConfig": {
            "get": {
                "description": "List all registered ConnConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] Multi-Cloud environment configuration"
                ],
                "summary": "List all registered ConnConfig",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ConnConfigList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/connConfig/{connConfigName}": {
            "get": {
                "description": "Get registered ConnConfig info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] Multi-Cloud environment configuration"
                ],
                "summary": "Get registered ConnConfig info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of connection config (cloud config)",
                        "name": "connConfigName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ConnConfig"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check Tumblebug is alive",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "Check Tumblebug is alive",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/inspectResources": {
            "post": {
                "description": "Inspect Resources (vNet, securityGroup, sshKey, vm) registered in CB-Tumblebug, CB-Spider, CSP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "Inspect Resources (vNet, securityGroup, sshKey, vm) registered in CB-Tumblebug, CB-Spider, CSP",
                "parameters": [
                    {
                        "description": "Specify connectionName and resource type",
                        "name": "connectionName",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.RestInspectResourcesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.InspectResource"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/inspectResourcesOverview": {
            "get": {
                "description": "Inspect Resources Overview (vNet, securityGroup, sshKey, vm) registered in CB-Tumblebug and CSP for all connections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "Inspect Resources Overview (vNet, securityGroup, sshKey, vm) registered in CB-Tumblebug and CSP for all connections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.InspectResourceAllResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/loadCommonResource": {
            "get": {
                "description": "Load Common Resources from internal asset files (Spec, Image)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] Multi-Cloud environment configuration"
                ],
                "summary": "Load Common Resources from internal asset files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.IdList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/lookupImage": {
            "post": {
                "description": "Lookup image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Common"
                ],
                "summary": "Lookup image",
                "parameters": [
                    {
                        "description": "Specify connectionName \u0026 cspImageId",
                        "name": "lookupImageReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcir.RestLookupImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.SpiderImageInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/lookupImages": {
            "post": {
                "description": "Lookup image list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Common"
                ],
                "summary": "Lookup image list",
                "parameters": [
                    {
                        "description": "Specify connectionName",
                        "name": "lookupImagesReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.TbConnectionName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.SpiderImageList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/lookupSpec": {
            "post": {
                "description": "Lookup spec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Common"
                ],
                "summary": "Lookup spec",
                "parameters": [
                    {
                        "description": "Specify connectionName \u0026 cspSpecName",
                        "name": "lookupSpecReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcir.RestLookupSpecRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.SpiderSpecInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/lookupSpecs": {
            "post": {
                "description": "Lookup spec list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Common"
                ],
                "summary": "Lookup spec list",
                "parameters": [
                    {
                        "description": "Specify connectionName",
                        "name": "lookupSpecsReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.TbConnectionName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.SpiderSpecList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/mcisDynamicCheckRequest": {
            "post": {
                "description": "Check available ConnectionConfig list before create MCIS Dynamically from common spec and image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "Check available ConnectionConfig list for creating MCIS Dynamically",
                "parameters": [
                    {
                        "description": "Details for MCIS dynamic request information",
                        "name": "mcisReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.McisConnectionConfigCandidatesReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.CheckMcisDynamicReqInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/mcisRecommendVm": {
            "post": {
                "description": "Recommend MCIS plan (filter and priority) Find details from https://github.com/cloud-barista/cb-tumblebug/discussions/1234",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "Recommend MCIS plan (filter and priority)",
                "parameters": [
                    {
                        "description": "Recommend MCIS plan (filter and priority)",
                        "name": "deploymentPlan",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/mcis.DeploymentPlan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mcir.TbSpecInfo"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns": {
            "get": {
                "description": "List all namespaces or namespaces' ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Namespace] Namespace management"
                ],
                "summary": "List all namespaces or namespaces' ID",
                "parameters": [
                    {
                        "enum": [
                            "id"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/common.RestGetAllNsResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/common.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Namespace] Namespace management"
                ],
                "summary": "Create namespace",
                "parameters": [
                    {
                        "description": "Details for a new namespace",
                        "name": "nsReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.NsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.NsInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all namespaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Namespace] Namespace management"
                ],
                "summary": "Delete all namespaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}": {
            "get": {
                "description": "Get namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Namespace] Namespace management"
                ],
                "summary": "Get namespace",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.NsInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "put": {
                "description": "Update namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Namespace] Namespace management"
                ],
                "summary": "Update namespace",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details to update existing namespace",
                        "name": "namespace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.NsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.NsInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Namespace] Namespace management"
                ],
                "summary": "Delete namespace",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/benchmark/mcis/{mcisId}": {
            "post": {
                "description": "Run MCIS benchmark for a single performance metric and return results",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Performance benchmarking (WIP)"
                ],
                "summary": "Run MCIS benchmark for a single performance metric and return results",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Host IP address to benchmark",
                        "name": "hostIP",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.RestGetBenchmarkRequest"
                        }
                    },
                    {
                        "enum": [
                            "install",
                            "init",
                            "cpus",
                            "cpum",
                            "memR",
                            "memW",
                            "fioR",
                            "fioW",
                            "dbR",
                            "dbW",
                            "rtt",
                            "mrtt",
                            "clean"
                        ],
                        "type": "string",
                        "description": "Benchmark Action to MCIS",
                        "name": "action",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.BenchmarkInfoArray"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/benchmarkAll/mcis/{mcisId}": {
            "post": {
                "description": "Run MCIS benchmark for all performance metrics and return results",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Performance benchmarking (WIP)"
                ],
                "summary": "Run MCIS benchmark for all performance metrics and return results",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Host IP address to benchmark",
                        "name": "hostIP",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.RestGetAllBenchmarkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.BenchmarkInfoArray"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/benchmarkLatency/mcis/{mcisId}": {
            "get": {
                "description": "Run MCIS benchmark for network latency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Performance benchmarking (WIP)"
                ],
                "summary": "Run MCIS benchmark for network latency",
                "parameters": [
                    {
                        "type": "string",
                        "default": "system-purpose-common-ns",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "probe",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.BenchmarkInfoArray"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/cmd/mcis/{mcisId}": {
            "post": {
                "description": "Send a command to specified MCIS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Remote command"
                ],
                "summary": "Send a command to specified MCIS",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MCIS Command Request",
                        "name": "mcisCmdReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.McisCmdReq"
                        }
                    },
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "subGroupId to apply the command only for VMs in subGroup of MCIS",
                        "name": "subGroupId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.RestPostCmdMcisResponseWrapper"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/cmd/mcis/{mcisId}/vm/{vmId}": {
            "post": {
                "description": "Send a command to specified VM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Remote command"
                ],
                "summary": "Send a command to specified VM",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "g1-1",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MCIS Command Request",
                        "name": "mcisCmdReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.McisCmdReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.RestPostCmdMcisVmResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/control/mcis/{mcisId}": {
            "get": {
                "description": "Control the lifecycle of MCIS (refine, suspend, resume, reboot, terminate)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Control lifecycle"
                ],
                "summary": "Control the lifecycle of MCIS (refine, suspend, resume, reboot, terminate)",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "suspend",
                            "resume",
                            "reboot",
                            "terminate",
                            "refine"
                        ],
                        "type": "string",
                        "description": "Action to MCIS",
                        "name": "action",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "false",
                            "true"
                        ],
                        "type": "string",
                        "description": "Force control to skip checking controllable status",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/control/mcis/{mcisId}/vm/{vmId}": {
            "get": {
                "description": "Control the lifecycle of VM (suspend, resume, reboot, terminate)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Control lifecycle"
                ],
                "summary": "Control the lifecycle of VM (suspend, resume, reboot, terminate)",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "g1-1",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "suspend",
                            "resume",
                            "reboot",
                            "terminate"
                        ],
                        "type": "string",
                        "description": "Action to MCIS",
                        "name": "action",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/defaultResources": {
            "delete": {
                "description": "Delete all Default Resource Objects in the given namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Common"
                ],
                "summary": "Delete all Default Resource Objects in the given namespace",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.IdList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/installBenchmarkAgent/mcis/{mcisId}": {
            "post": {
                "description": "Install the benchmark agent to specified MCIS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Performance benchmarking (WIP)"
                ],
                "summary": "Install the benchmark agent to specified MCIS",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MCIS Command Request",
                        "name": "mcisCmdReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.McisCmdReq"
                        }
                    },
                    {
                        "enum": [
                            "update"
                        ],
                        "type": "string",
                        "description": "Option for checking update",
                        "name": "option",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.RestPostCmdMcisResponseWrapper"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/loadDefaultResource": {
            "get": {
                "description": "Load Default Resource from internal asset file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Common"
                ],
                "summary": "Load Default Resource from internal asset file",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "all",
                            "vnet",
                            "sg",
                            "sshkey"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "connectionName of cloud for designated resource",
                        "name": "connectionName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/mcis": {
            "get": {
                "description": "List all MCISs or MCISs' ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "List all MCISs or MCISs' ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "id",
                            "simple",
                            "status"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/mcis.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/mcis.RestGetAllMcisResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/common.IdList"
                                        },
                                        "[SIMPLE]": {
                                            "$ref": "#/definitions/mcis.RestGetAllMcisResponse"
                                        },
                                        "[STATUS]": {
                                            "$ref": "#/definitions/mcis.RestGetAllMcisStatusResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create MCIS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "Create MCIS",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details for an MCIS object",
                        "name": "mcisReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.TbMcisReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.TbMcisInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all MCISs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "Delete all MCISs",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "force"
                        ],
                        "type": "string",
                        "description": "Option for delete MCIS (support force delete)",
                        "name": "option",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/mcis/{mcisId}": {
            "get": {
                "description": "Get MCIS object (option: status, accessInfo, vmId)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "Get MCIS object (option: status, accessInfo, vmId)",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "default",
                            "id",
                            "status",
                            "accessinfo"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "(For option=id) Field key for filtering (ex: connectionName)",
                        "name": "filterKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "(For option=id) Field value for filtering (ex: aws-ap-northeast-2)",
                        "name": "filterVal",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "(For option=accessinfo) accessInfoOption (showSshKey)",
                        "name": "accessInfoOption",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given action param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/mcis.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[AccessInfo]": {
                                            "$ref": "#/definitions/mcis.McisAccessInfo"
                                        },
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/mcis.TbMcisInfo"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/common.IdList"
                                        },
                                        "[STATUS]": {
                                            "$ref": "#/definitions/mcis.McisStatusInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete MCIS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "Delete MCIS",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "terminate",
                            "force"
                        ],
                        "type": "string",
                        "description": "Option for delete MCIS (support force delete)",
                        "name": "option",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.IdList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/mcis/{mcisId}/mcSwNlb": {
            "post": {
                "description": "Create a special purpose MCIS for NLB and depoly and setting SW NLB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] NLB management"
                ],
                "summary": "Create a special purpose MCIS for NLB and depoly and setting SW NLB",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details of the NLB object",
                        "name": "nlbReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.TbNLBReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.TbMcisInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/mcis/{mcisId}/nlb": {
            "get": {
                "description": "List all NLBs or NLBs' ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] NLB management"
                ],
                "summary": "List all NLBs or NLBs' ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "id"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field key for filtering (ex: cspNLBName)",
                        "name": "filterKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field value for filtering (ex: ns01-alibaba-ap-northeast-1-vpc)",
                        "name": "filterVal",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/mcis.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/mcis.RestGetAllNLBResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/common.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create NLB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] NLB management"
                ],
                "summary": "Create NLB",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "register"
                        ],
                        "type": "string",
                        "description": "Option: [required params for register] connectionName, name, cspNLBId",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "description": "Details of the NLB object",
                        "name": "nlbReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.TbNLBReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.TbNLBInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all NLBs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] NLB management"
                ],
                "summary": "Delete all NLBs",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Delete resources containing matched ID-substring only",
                        "name": "match",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.IdList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/mcis/{mcisId}/nlb/{nlbId}": {
            "get": {
                "description": "Get NLB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] NLB management"
                ],
                "summary": "Get NLB",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "g1",
                        "description": "NLB ID",
                        "name": "nlbId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.TbNLBInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete NLB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] NLB management"
                ],
                "summary": "Delete NLB",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "NLB ID",
                        "name": "nlbId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/mcis/{mcisId}/nlb/{nlbId}/healthz": {
            "get": {
                "description": "Get NLB Health",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] NLB management"
                ],
                "summary": "Get NLB Health",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "g1",
                        "description": "NLB ID",
                        "name": "nlbId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.TbNLBInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/mcis/{mcisId}/nlb/{nlbId}/vm": {
            "post": {
                "description": "Add VMs to NLB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] NLB management (for developer)"
                ],
                "summary": "Add VMs to NLB",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "g1",
                        "description": "NLB ID",
                        "name": "nlbId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VMs to add to NLB",
                        "name": "nlbAddRemoveVMReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.TbNLBAddRemoveVMReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.TbNLBInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete VMs from NLB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] NLB management (for developer)"
                ],
                "summary": "Delete VMs from NLB",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "g1",
                        "description": "NLB ID",
                        "name": "nlbId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VMs to add to NLB",
                        "name": "nlbAddRemoveVMReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.TbNLBAddRemoveVMReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/mcis/{mcisId}/subgroup": {
            "get": {
                "description": "List SubGroup IDs in a specified MCIS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "List SubGroup IDs in a specified MCIS",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.IdList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/mcis/{mcisId}/subgroup/{subgroupId}": {
            "get": {
                "description": "List VMs with a SubGroup label in a specified MCIS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "List VMs with a SubGroup label in a specified MCIS",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "g1",
                        "description": "subGroup ID",
                        "name": "subgroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "id"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.IdList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "ScaleOut subGroup in specified MCIS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "ScaleOut subGroup in specified MCIS",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "g1",
                        "description": "subGroup ID",
                        "name": "subgroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "subGroup scaleOut request",
                        "name": "vmReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.TbScaleOutSubGroupReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.TbMcisInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/mcis/{mcisId}/vm": {
            "post": {
                "description": "Create and add homogeneous VMs(subGroup) to a specified MCIS (Set subGroupSize for multiple VMs)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "Create and add homogeneous VMs(subGroup) to a specified MCIS (Set subGroupSize for multiple VMs)",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details for VMs(subGroup)",
                        "name": "vmReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.TbVmReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.TbMcisInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/mcis/{mcisId}/vm/{vmId}": {
            "get": {
                "description": "Get VM in specified MCIS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "Get VM in specified MCIS",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "g1-1",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "default",
                            "status",
                            "idsInDetail"
                        ],
                        "type": "string",
                        "description": "Option for MCIS",
                        "name": "option",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/mcis.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/mcis.TbVmInfo"
                                        },
                                        "[IDNAME]": {
                                            "$ref": "#/definitions/mcis.TbIdNameInDetailInfo"
                                        },
                                        "[STATUS]": {
                                            "$ref": "#/definitions/mcis.TbVmStatusInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete VM in specified MCIS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "Delete VM in specified MCIS",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "g1-1",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "force"
                        ],
                        "type": "string",
                        "description": "Option for delete VM (support force delete)",
                        "name": "option",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/mcis/{mcisId}/vm/{vmId}/dataDisk": {
            "get": {
                "description": "Get available dataDisks for a VM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Data Disk management"
                ],
                "summary": "Get available dataDisks for a VM",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "g1-1",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/mcir.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/mcir.RestGetAllDataDiskResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/common.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "put": {
                "description": "Attach/Detach available dataDisk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Data Disk management"
                ],
                "summary": "Attach/Detach available dataDisk",
                "parameters": [
                    {
                        "description": "Request body to attach/detach dataDisk",
                        "name": "attachDetachDataDiskReq",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbAttachDetachDataDiskReq"
                        }
                    },
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "g1-1",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "attach",
                            "detach"
                        ],
                        "type": "string",
                        "description": "Option for MCIS",
                        "name": "option",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.TbVmInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/mcis/{mcisId}/vm/{vmId}/snapshot": {
            "post": {
                "description": "Snapshot VM and create a Custom Image Object using the Snapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] Snapshot and Custom Image Management"
                ],
                "summary": "Snapshot VM and create a Custom Image Object using the Snapshot",
                "parameters": [
                    {
                        "description": "Request body to create VM snapshot",
                        "name": "vmSnapshotReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.TbVmSnapshotReq"
                        }
                    },
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "g1-1",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbCustomImageInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/mcis/{mcisId}/vmDynamic": {
            "post": {
                "description": "Create VM Dynamically and add it to MCIS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "Create VM Dynamically and add it to MCIS",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details for Vm dynamic request",
                        "name": "vmReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.TbVmDynamicReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.TbMcisInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/mcisDynamic": {
            "post": {
                "description": "Create MCIS Dynamically from common spec and image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "Create MCIS Dynamically",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details for MCIS object",
                        "name": "mcisReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.TbMcisDynamicReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.TbMcisInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/monitoring/install/mcis/{mcisId}": {
            "post": {
                "description": "Install monitoring agent (CB-Dragonfly agent) to MCIS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Resource monitor (for developer)"
                ],
                "summary": "Install monitoring agent (CB-Dragonfly agent) to MCIS",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details for an MCIS object",
                        "name": "mcisInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.McisCmdReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.AgentInstallContentWrapper"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/monitoring/mcis/{mcisId}/metric/{metric}": {
            "get": {
                "description": "Get monitoring data of specified MCIS for specified monitoring metric (cpu, memory, disk, network)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Resource monitor (for developer)"
                ],
                "summary": "Get monitoring data of specified MCIS for specified monitoring metric (cpu, memory, disk, network)",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metric type: cpu, memory, disk, network",
                        "name": "metric",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.MonResultSimpleResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/monitoring/status/mcis/{mcisId}/vm/{vmId}": {
            "put": {
                "description": "Set monitoring agent (CB-Dragonfly agent) installation status installed (for Windows VM only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Resource monitor (for developer)"
                ],
                "summary": "Set monitoring agent (CB-Dragonfly agent) installation status installed (for Windows VM only)",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "vm01",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.TbVmInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/network/mcis/{mcisId}": {
            "put": {
                "description": "Inject Cloud Information For Cloud Adaptive Network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Cloud Adaptive Network (for developer)"
                ],
                "summary": "Inject Cloud Information For Cloud Adaptive Network",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details for the network request body",
                        "name": "networkReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.NetworkReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.AgentInstallContentWrapper"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Configure Cloud Adaptive Network (cb-network agent) to MCIS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Cloud Adaptive Network (for developer)"
                ],
                "summary": "Configure Cloud Adaptive Network (cb-network agent) to MCIS",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details for the network request body",
                        "name": "networkReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.NetworkReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.AgentInstallContentWrapper"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/policy/mcis": {
            "get": {
                "description": "List all MCIS policies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Auto control policy management (WIP)"
                ],
                "summary": "List all MCIS policies",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.RestGetAllMcisPolicyResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all MCIS policies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Auto control policy management (WIP)"
                ],
                "summary": "Delete all MCIS policies",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/policy/mcis/{mcisId}": {
            "get": {
                "description": "Get MCIS Policy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Auto control policy management (WIP)"
                ],
                "summary": "Get MCIS Policy",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.McisPolicyInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create MCIS Automation policy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Auto control policy management (WIP)"
                ],
                "summary": "Create MCIS Automation policy",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details for an MCIS automation policy request",
                        "name": "mcisPolicyReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.McisPolicyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.McisPolicyInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete MCIS Policy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Auto control policy management (WIP)"
                ],
                "summary": "Delete MCIS Policy",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mcis01",
                        "description": "MCIS ID",
                        "name": "mcisId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/registerCspVm": {
            "post": {
                "description": "Register existing VM in a CSP to Cloud-Barista MCIS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "Register existing VM in a CSP to Cloud-Barista MCIS",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details for an MCIS object with existing CSP VM ID",
                        "name": "mcisReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcis.TbMcisReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.TbMcisInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/customImage": {
            "get": {
                "description": "List all customImages or customImages' ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] Snapshot and Custom Image Management"
                ],
                "summary": "List all customImages or customImages' ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "id"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field key for filtering (ex:guestOS)",
                        "name": "filterKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field value for filtering (ex: Ubuntu18.04)",
                        "name": "filterVal",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/mcir.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/mcir.RestGetAllCustomImageResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/common.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Register existing Custom Image in a CSP (option=register)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] Snapshot and Custom Image Management"
                ],
                "summary": "Register existing Custom Image in a CSP",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "register"
                        ],
                        "type": "string",
                        "description": "Option: ",
                        "name": "option",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Request to Register existing Custom Image in a CSP",
                        "name": "customImageRegisterReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcir.TbCustomImageReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbCustomImageInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all customImages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] Snapshot and Custom Image Management"
                ],
                "summary": "Delete all customImages",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Delete resources containing matched ID-substring only",
                        "name": "match",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.IdList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/customImage/{customImageId}": {
            "get": {
                "description": "Get customImage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] Snapshot and Custom Image Management"
                ],
                "summary": "Get customImage",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "customImage ID",
                        "name": "customImageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbCustomImageInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete customImage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] Snapshot and Custom Image Management"
                ],
                "summary": "Delete customImage",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "customImage ID",
                        "name": "customImageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/dataDisk": {
            "get": {
                "description": "List all Data Disks or Data Disks' ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Data Disk management"
                ],
                "summary": "List all Data Disks or Data Disks' ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "id"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field key for filtering (ex: systemLabel)",
                        "name": "filterKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field value for filtering (ex: Registered from CSP resource)",
                        "name": "filterVal",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/mcir.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/mcir.RestGetAllDataDiskResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/common.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Data Disk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Data Disk management"
                ],
                "summary": "Create Data Disk",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "register"
                        ],
                        "type": "string",
                        "description": "Option: ",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "description": "Details for an Data Disk object",
                        "name": "dataDiskInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcir.TbDataDiskReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbDataDiskInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all Data Disks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Data Disk management"
                ],
                "summary": "Delete all Data Disks",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Delete resources containing matched ID-substring only",
                        "name": "match",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.IdList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/dataDisk/{dataDiskId}": {
            "get": {
                "description": "Get Data Disk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Data Disk management"
                ],
                "summary": "Get Data Disk",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Data Disk ID",
                        "name": "dataDiskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbDataDiskInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "put": {
                "description": "Upsize Data Disk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Data Disk management"
                ],
                "summary": "Upsize Data Disk",
                "parameters": [
                    {
                        "description": "Request body to upsize the dataDisk",
                        "name": "dataDiskUpsizeReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcir.TbDataDiskUpsizeReq"
                        }
                    },
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "DataDisk ID",
                        "name": "dataDiskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbDataDiskInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Data Disk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Data Disk management"
                ],
                "summary": "Delete Data Disk",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Data Disk ID",
                        "name": "dataDiskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/fetchImages": {
            "post": {
                "description": "Fetch images",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Image management"
                ],
                "summary": "Fetch images",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/fetchSpecs": {
            "post": {
                "description": "Fetch specs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Spec management"
                ],
                "summary": "Fetch specs",
                "parameters": [
                    {
                        "type": "string",
                        "default": "system-purpose-common-ns",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/filterSpecs": {
            "post": {
                "description": "Filter specs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Spec management"
                ],
                "summary": "Filter specs",
                "parameters": [
                    {
                        "type": "string",
                        "default": "system-purpose-common-ns",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Filter for filtering specs",
                        "name": "specFilter",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSpecInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.RestFilterSpecsResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/filterSpecsByRange": {
            "post": {
                "description": "Filter specs by range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Spec management"
                ],
                "summary": "Filter specs by range",
                "parameters": [
                    {
                        "type": "string",
                        "default": "system-purpose-common-ns",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Filter for range-filtering specs",
                        "name": "specRangeFilter",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/mcir.FilterSpecsByRangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.RestFilterSpecsResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/image": {
            "get": {
                "description": "List all images or images' ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Image management"
                ],
                "summary": "List all images or images' ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "id"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field key for filtering (ex:guestOS)",
                        "name": "filterKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field value for filtering (ex: Ubuntu18.04)",
                        "name": "filterVal",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/mcir.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/mcir.RestGetAllImageResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/common.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Register image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Image management"
                ],
                "summary": "Register image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "registeringMethod (registerWithInfo or registerWithId)",
                        "name": "action",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details for an image object",
                        "name": "imageInfo",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbImageInfo"
                        }
                    },
                    {
                        "description": "name, connectionName and cspImageId",
                        "name": "imageId",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbImageReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbImageInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all images",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Image management"
                ],
                "summary": "Delete all images",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Delete resources containing matched ID-substring only",
                        "name": "match",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.IdList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/image/{imageId}": {
            "get": {
                "description": "Get image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Image management"
                ],
                "summary": "Get image",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "imageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbImageInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "put": {
                "description": "Update image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Image management"
                ],
                "summary": "Update image",
                "parameters": [
                    {
                        "description": "Details for an image object",
                        "name": "imageInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcir.TbImageInfo"
                        }
                    },
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "imageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbImageInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Image management"
                ],
                "summary": "Delete image",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "imageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/searchImage": {
            "post": {
                "description": "Search image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Image management"
                ],
                "summary": "Search image",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Keywords",
                        "name": "keywords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcir.RestSearchImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.RestGetAllImageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/securityGroup": {
            "get": {
                "description": "List all Security Groups or Security Groups' ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Security group management"
                ],
                "summary": "List all Security Groups or Security Groups' ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "id"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field key for filtering (ex: systemLabel)",
                        "name": "filterKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field value for filtering (ex: Registered from CSP resource)",
                        "name": "filterVal",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/mcir.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/mcir.RestGetAllSecurityGroupResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/common.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Security Group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Security group management"
                ],
                "summary": "Create Security Group",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "register"
                        ],
                        "type": "string",
                        "description": "Option: [required params for register] connectionName, name, vNetId, cspSecurityGroupId",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "description": "Details for an securityGroup object",
                        "name": "securityGroupReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSecurityGroupReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSecurityGroupInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all Security Groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Security group management"
                ],
                "summary": "Delete all Security Groups",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Delete resources containing matched ID-substring only",
                        "name": "match",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.IdList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/securityGroup/{securityGroupId}": {
            "get": {
                "description": "Get Security Group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Security group management"
                ],
                "summary": "Get Security Group",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Security Group ID",
                        "name": "securityGroupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSecurityGroupInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Security Group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Security group management"
                ],
                "summary": "Delete Security Group",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Security Group ID",
                        "name": "securityGroupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/securityGroup/{securityGroupId}/rules": {
            "post": {
                "description": "Create FirewallRules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Security group management"
                ],
                "summary": "Create FirewallRules",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "FirewallRules to create",
                        "name": "firewallRuleReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcir.TbFirewallRulesWrapper"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSecurityGroupInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete FirewallRules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Security group management"
                ],
                "summary": "Delete FirewallRules",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "FirewallRules to delete",
                        "name": "firewallRuleReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcir.TbFirewallRulesWrapper"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSecurityGroupInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/spec": {
            "get": {
                "description": "List all specs or specs' ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Spec management"
                ],
                "summary": "List all specs or specs' ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "system-purpose-common-ns",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "id"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field key for filtering (ex: providerName)",
                        "name": "filterKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field value for filtering (ex: aws)",
                        "name": "filterVal",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/mcir.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/mcir.RestGetAllSpecResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/common.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Register spec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Spec management"
                ],
                "summary": "Register spec",
                "parameters": [
                    {
                        "type": "string",
                        "description": "registerWithInfo or else",
                        "name": "registeringMethod",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "system-purpose-common-ns",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details for an spec object",
                        "name": "specInfo",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSpecInfo"
                        }
                    },
                    {
                        "description": "name, connectionName and cspSpecName",
                        "name": "specName",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSpecReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSpecInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all specs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Spec management"
                ],
                "summary": "Delete all specs",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Delete resources containing matched ID-substring only",
                        "name": "match",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.IdList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/spec/{specId}": {
            "get": {
                "description": "Get spec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Spec management"
                ],
                "summary": "Get spec",
                "parameters": [
                    {
                        "type": "string",
                        "default": "system-purpose-common-ns",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Spec ID",
                        "name": "specId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSpecInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "put": {
                "description": "Update spec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Spec management"
                ],
                "summary": "Update spec",
                "parameters": [
                    {
                        "description": "Details for an spec object",
                        "name": "specInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSpecInfo"
                        }
                    },
                    {
                        "type": "string",
                        "default": "system-purpose-common-ns",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Spec ID",
                        "name": "specId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSpecInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete spec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Spec management"
                ],
                "summary": "Delete spec",
                "parameters": [
                    {
                        "type": "string",
                        "default": "system-purpose-common-ns",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Spec ID",
                        "name": "specId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/sshKey": {
            "get": {
                "description": "List all SSH Keys or SSH Keys' ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Access key management"
                ],
                "summary": "List all SSH Keys or SSH Keys' ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "id"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field key for filtering (ex: systemLabel)",
                        "name": "filterKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field value for filtering (ex: Registered from CSP resource)",
                        "name": "filterVal",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/mcir.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/mcir.RestGetAllSshKeyResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/common.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create SSH Key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Access key management"
                ],
                "summary": "Create SSH Key",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "register"
                        ],
                        "type": "string",
                        "description": "Option: [required params for register] connectionName, name, cspSshKeyId, fingerprint, username, publicKey, privateKey",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "description": "Details for an SSH Key object",
                        "name": "sshKeyInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSshKeyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSshKeyInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all SSH Keys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Access key management"
                ],
                "summary": "Delete all SSH Keys",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Delete resources containing matched ID-substring only",
                        "name": "match",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.IdList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/sshKey/{sshKeyId}": {
            "get": {
                "description": "Get SSH Key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Access key management"
                ],
                "summary": "Get SSH Key",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SSH Key ID",
                        "name": "sshKeyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSshKeyInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "put": {
                "description": "Update SSH Key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Access key management"
                ],
                "summary": "Update SSH Key",
                "parameters": [
                    {
                        "description": "Details for an SSH Key object",
                        "name": "sshKeyInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSshKeyInfo"
                        }
                    },
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SshKey ID",
                        "name": "sshKeyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSshKeyInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete SSH Key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Access key management"
                ],
                "summary": "Delete SSH Key",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SSH Key ID",
                        "name": "sshKeyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/vNet": {
            "get": {
                "description": "List all VNets or VNets' ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Network management"
                ],
                "summary": "List all VNets or VNets' ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "id"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field key for filtering (ex: cspVNetName)",
                        "name": "filterKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field value for filtering (ex: ns01-alibaba-ap-northeast-1-vpc)",
                        "name": "filterVal",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/mcir.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/mcir.RestGetAllVNetResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/common.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create VNet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Network management"
                ],
                "summary": "Create VNet",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "register"
                        ],
                        "type": "string",
                        "description": "Option: [required params for register] connectionName, name, cspVNetId",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "description": "Details for an VNet object",
                        "name": "vNetReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcir.TbVNetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbVNetInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all VNets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Network management"
                ],
                "summary": "Delete all VNets",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Delete resources containing matched ID-substring only",
                        "name": "match",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.IdList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/vNet/{vNetId}": {
            "get": {
                "description": "Get VNet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Network management"
                ],
                "summary": "Get VNet",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VNet ID",
                        "name": "vNetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbVNetInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete VNet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Network management"
                ],
                "summary": "Delete VNet",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VNet ID",
                        "name": "vNetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/vNet/{vNetId}/subnet": {
            "post": {
                "description": "Create Subnet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Network management"
                ],
                "summary": "Create Subnet",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details for an Subnet object",
                        "name": "subnetReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSubnetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcir.TbSubnetInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ns/{nsId}/resources/vNet/{vNetId}/subnet/{subnetId}": {
            "delete": {
                "description": "Delete Subnet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Network management"
                ],
                "summary": "Delete Subnet",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Subnet ID",
                        "name": "subnetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/object": {
            "get": {
                "description": "Get value of an object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "Get value of an object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get object value by key",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "Delete an object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "delete object value by key",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/objects": {
            "get": {
                "description": "List all objects for a given key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "List all objects for a given key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "retrieve objects by key",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete child objects along with the given object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "Delete child objects along with the given object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete child objects based on the given key string",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/region": {
            "get": {
                "description": "List all registered regions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] Multi-Cloud environment configuration"
                ],
                "summary": "List all registered regions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.RegionList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/region/{regionName}": {
            "get": {
                "description": "Get registered region info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] Multi-Cloud environment configuration"
                ],
                "summary": "Get registered region info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of region to retrieve",
                        "name": "regionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.Region"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/registerCspResources": {
            "post": {
                "description": "Register CSP Native Resources (vNet, securityGroup, sshKey, vm) to CB-Tumblebug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "Register CSP Native Resources (vNet, securityGroup, sshKey, vm) to CB-Tumblebug",
                "parameters": [
                    {
                        "description": "Specify connectionName, NS Id, and MCIS Name",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.RestRegisterCspNativeResourcesRequest"
                        }
                    },
                    {
                        "enum": [
                            "onlyVm",
                            "exceptVm"
                        ],
                        "type": "string",
                        "description": "Option to specify resourceType",
                        "name": "option",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.RegisterResourceResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/registerCspResourcesAll": {
            "post": {
                "description": "Register CSP Native Resources (vNet, securityGroup, sshKey, vm) from all Clouds to CB-Tumblebug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "Register CSP Native Resources (vNet, securityGroup, sshKey, vm) from all Clouds to CB-Tumblebug",
                "parameters": [
                    {
                        "description": "Specify NS Id and MCIS Name",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.RestRegisterCspNativeResourcesRequestAll"
                        }
                    },
                    {
                        "enum": [
                            "onlyVm",
                            "exceptVm"
                        ],
                        "type": "string",
                        "description": "Option to specify resourceType",
                        "name": "option",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.RegisterResourceAllResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/systemMcis": {
            "post": {
                "description": "Create System MCIS Dynamically for Special Purpose",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra service] MCIS Provisioning management"
                ],
                "summary": "Create System MCIS Dynamically for Special Purpose in NS:system-purpose-common-ns",
                "parameters": [
                    {
                        "enum": [
                            "probe"
                        ],
                        "type": "string",
                        "description": "Option for the purpose of system MCIS",
                        "name": "option",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcis.TbMcisInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/{nsId}/checkResource/{resourceType}/{resourceId}": {
            "get": {
                "description": "Check resources' existence",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Infra resource] MCIR Common"
                ],
                "summary": "Check resources' existence",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ns01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource Type",
                        "name": "resourceType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "resourceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.ConfigInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "SPIDER_REST_URL"
                },
                "name": {
                    "type": "string",
                    "example": "SPIDER_REST_URL"
                },
                "value": {
                    "type": "string",
                    "example": "http://localhost:1024/spider"
                }
            }
        },
        "common.ConfigReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "SPIDER_REST_URL"
                },
                "value": {
                    "type": "string",
                    "example": "http://localhost:1024/spider"
                }
            }
        },
        "common.ConnConfig": {
            "type": "object",
            "properties": {
                "configName": {
                    "type": "string"
                },
                "credentialName": {
                    "type": "string"
                },
                "driverName": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/common.GeoLocation"
                },
                "providerName": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string"
                }
            }
        },
        "common.ConnConfigList": {
            "type": "object",
            "properties": {
                "connectionconfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.ConnConfig"
                    }
                }
            }
        },
        "common.GeoLocation": {
            "type": "object",
            "properties": {
                "briefAddr": {
                    "type": "string"
                },
                "cloudType": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "nativeRegion": {
                    "type": "string"
                }
            }
        },
        "common.IID": {
            "type": "object",
            "properties": {
                "nameId": {
                    "description": "NameID by user",
                    "type": "string"
                },
                "systemId": {
                    "description": "SystemID by CloudOS",
                    "type": "string"
                }
            }
        },
        "common.IdList": {
            "type": "object",
            "properties": {
                "output": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "common.JSONResult": {
            "type": "object"
        },
        "common.KeyValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "common.NsInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Description for this namespace"
                },
                "id": {
                    "type": "string",
                    "example": "ns01"
                },
                "name": {
                    "type": "string",
                    "example": "ns01"
                }
            }
        },
        "common.NsReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Description for this namespace"
                },
                "name": {
                    "type": "string",
                    "example": "ns01"
                }
            }
        },
        "common.Region": {
            "type": "object",
            "properties": {
                "keyValueInfoList": {
                    "description": "ex) { {region, us-east1}, {zone, us-east1-c} }",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "providerName": {
                    "description": "ex) \"GCP\"",
                    "type": "string"
                },
                "regionName": {
                    "description": "ex) \"region01\"",
                    "type": "string"
                }
            }
        },
        "common.RegionList": {
            "type": "object",
            "properties": {
                "region": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Region"
                    }
                }
            }
        },
        "common.RestGetAllConfigResponse": {
            "type": "object",
            "properties": {
                "config": {
                    "description": "Name string     ` + "`" + `json:\"name\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.ConfigInfo"
                    }
                }
            }
        },
        "common.RestGetAllNsResponse": {
            "type": "object",
            "properties": {
                "ns": {
                    "description": "Name string     ` + "`" + `json:\"name\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.NsInfo"
                    }
                }
            }
        },
        "common.RestInspectResourcesRequest": {
            "type": "object",
            "properties": {
                "connectionName": {
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "resourceType": {
                    "type": "string",
                    "enum": [
                        "vNet",
                        "securityGroup",
                        "sshKey",
                        "vm"
                    ],
                    "example": "vNet"
                }
            }
        },
        "common.RestRegisterCspNativeResourcesRequest": {
            "type": "object",
            "properties": {
                "connectionName": {
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "mcisName": {
                    "type": "string",
                    "example": "csp"
                },
                "nsId": {
                    "type": "string",
                    "example": "ns01"
                }
            }
        },
        "common.RestRegisterCspNativeResourcesRequestAll": {
            "type": "object",
            "properties": {
                "mcisName": {
                    "type": "string",
                    "example": "csp"
                },
                "nsId": {
                    "type": "string",
                    "example": "ns01"
                }
            }
        },
        "common.SimpleMsg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Any message"
                }
            }
        },
        "common.TbConnectionName": {
            "type": "object",
            "properties": {
                "connectionName": {
                    "type": "string"
                }
            }
        },
        "mcir.CustomImageStatus": {
            "type": "string",
            "enum": [
                "Available",
                "Unavailable"
            ],
            "x-enum-varnames": [
                "MyImageAvailable",
                "MyImageUnavailable"
            ]
        },
        "mcir.DiskStatus": {
            "type": "string",
            "enum": [
                "Creating",
                "Available",
                "Attached",
                "Deleting",
                "Error"
            ],
            "x-enum-varnames": [
                "DiskCreating",
                "DiskAvailable",
                "DiskAttached",
                "DiskDeleting",
                "DiskError"
            ]
        },
        "mcir.FilterSpecsByRangeRequest": {
            "type": "object",
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "costPerHour": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "cspSpecName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "ebsBwMbps": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "evaluationScore01": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "evaluationScore02": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "evaluationScore03": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "evaluationScore04": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "evaluationScore05": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "evaluationScore06": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "evaluationScore07": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "evaluationScore08": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "evaluationScore09": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "evaluationScore10": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "evaluationStatus": {
                    "type": "string"
                },
                "gpuMemGiB": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "gpuModel": {
                    "type": "string"
                },
                "gpuP2p": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "maxNumStorage": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "maxTotalStorageTiB": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "memGiB": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "name": {
                    "type": "string"
                },
                "netBwGbps": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "numGpu": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "numStorage": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "numcore": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "numvCPU": {
                    "$ref": "#/definitions/mcir.Range"
                },
                "osType": {
                    "type": "string"
                },
                "providerName": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string"
                },
                "storageGiB": {
                    "$ref": "#/definitions/mcir.Range"
                }
            }
        },
        "mcir.JSONResult": {
            "type": "object"
        },
        "mcir.Range": {
            "type": "object",
            "properties": {
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                }
            }
        },
        "mcir.RestFilterSpecsResponse": {
            "type": "object",
            "properties": {
                "spec": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.TbSpecInfo"
                    }
                }
            }
        },
        "mcir.RestGetAllCustomImageResponse": {
            "type": "object",
            "properties": {
                "customImage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.TbCustomImageInfo"
                    }
                }
            }
        },
        "mcir.RestGetAllDataDiskResponse": {
            "type": "object",
            "properties": {
                "dataDisk": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.TbDataDiskInfo"
                    }
                }
            }
        },
        "mcir.RestGetAllImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.TbImageInfo"
                    }
                }
            }
        },
        "mcir.RestGetAllSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "securityGroup": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.TbSecurityGroupInfo"
                    }
                }
            }
        },
        "mcir.RestGetAllSpecResponse": {
            "type": "object",
            "properties": {
                "spec": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.TbSpecInfo"
                    }
                }
            }
        },
        "mcir.RestGetAllSshKeyResponse": {
            "type": "object",
            "properties": {
                "sshKey": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.TbSshKeyInfo"
                    }
                }
            }
        },
        "mcir.RestGetAllVNetResponse": {
            "type": "object",
            "properties": {
                "vNet": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.TbVNetInfo"
                    }
                }
            }
        },
        "mcir.RestLookupImageRequest": {
            "type": "object",
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "cspImageId": {
                    "type": "string"
                }
            }
        },
        "mcir.RestLookupSpecRequest": {
            "type": "object",
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "cspSpecName": {
                    "type": "string"
                }
            }
        },
        "mcir.RestSearchImageRequest": {
            "type": "object",
            "properties": {
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "mcir.SpiderGpuInfo": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "string"
                },
                "mem": {
                    "type": "string"
                },
                "mfr": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                }
            }
        },
        "mcir.SpiderImageInfo": {
            "type": "object",
            "properties": {
                "guestOS": {
                    "description": "Windows7, Ubuntu etc.",
                    "type": "string"
                },
                "iid": {
                    "description": "Fields for response",
                    "allOf": [
                        {
                            "$ref": "#/definitions/common.IID"
                        }
                    ]
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "name": {
                    "description": "Fields for request",
                    "type": "string"
                },
                "status": {
                    "description": "available, unavailable",
                    "type": "string"
                }
            }
        },
        "mcir.SpiderImageList": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.SpiderImageInfo"
                    }
                }
            }
        },
        "mcir.SpiderSpecInfo": {
            "type": "object",
            "properties": {
                "gpu": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.SpiderGpuInfo"
                    }
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "mem": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "vcpu": {
                    "$ref": "#/definitions/mcir.SpiderVCpuInfo"
                }
            }
        },
        "mcir.SpiderSpecList": {
            "type": "object",
            "properties": {
                "vmspec": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.SpiderSpecInfo"
                    }
                }
            }
        },
        "mcir.SpiderVCpuInfo": {
            "type": "object",
            "properties": {
                "clock": {
                    "description": "GHz",
                    "type": "string"
                },
                "count": {
                    "type": "string"
                }
            }
        },
        "mcir.TbAttachDetachDataDiskReq": {
            "type": "object",
            "required": [
                "dataDiskId"
            ],
            "properties": {
                "dataDiskId": {
                    "type": "string"
                }
            }
        },
        "mcir.TbCustomImageInfo": {
            "type": "object",
            "properties": {
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionName": {
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "creationDate": {
                    "type": "string",
                    "example": "2022-10-18T08:12:48Z"
                },
                "cspCustomImageId": {
                    "type": "string",
                    "example": "ami-06eb41e14121c550a"
                },
                "cspCustomImageName": {
                    "type": "string",
                    "example": "aws-ap-southeast-1-snapshot"
                },
                "description": {
                    "type": "string"
                },
                "guestOS": {
                    "description": "Windows7, Ubuntu etc.",
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "aws-ap-southeast-1-snapshot"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "aws-ap-southeast-1-snapshot"
                },
                "namespace": {
                    "description": "required to save in RDB",
                    "type": "string",
                    "example": "ns01"
                },
                "sourceVmId": {
                    "type": "string",
                    "example": "aws-ap-southeast-1-1"
                },
                "status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/mcir.CustomImageStatus"
                        }
                    ],
                    "example": "Available"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the MCIR in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                }
            }
        },
        "mcir.TbCustomImageReq": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "cspCustomImageId": {
                    "description": "This field is for 'Register existing custom image'",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sourceVmId": {
                    "type": "string"
                }
            }
        },
        "mcir.TbDataDiskInfo": {
            "type": "object",
            "properties": {
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionName": {
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "createdTime": {
                    "type": "string",
                    "example": "2022-10-12T05:09:51.05Z"
                },
                "cspDataDiskId": {
                    "type": "string",
                    "example": "vol-0d397c3239629bd43"
                },
                "cspDataDiskName": {
                    "type": "string",
                    "example": "ns01-aws-ap-southeast-1-datadisk"
                },
                "description": {
                    "type": "string",
                    "example": "Available"
                },
                "diskSize": {
                    "type": "string",
                    "example": "77"
                },
                "diskType": {
                    "type": "string",
                    "example": "standard"
                },
                "id": {
                    "type": "string",
                    "example": "aws-ap-southeast-1-datadisk"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "aws-ap-southeast-1-datadisk"
                },
                "status": {
                    "description": "Available, Unavailable, Attached, ...",
                    "allOf": [
                        {
                            "$ref": "#/definitions/mcir.DiskStatus"
                        }
                    ],
                    "example": "Available"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the MCIR in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                }
            }
        },
        "mcir.TbDataDiskReq": {
            "type": "object",
            "required": [
                "connectionName",
                "diskSize",
                "name"
            ],
            "properties": {
                "connectionName": {
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "cspDataDiskId": {
                    "description": "Fields for \"Register existing dataDisk\" feature\nCspDataDiskId is required to register object from CSP (option=register)",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "diskSize": {
                    "type": "string",
                    "default": "100",
                    "example": "77"
                },
                "diskType": {
                    "type": "string",
                    "example": "default"
                },
                "name": {
                    "type": "string",
                    "example": "aws-ap-southeast-1-datadisk"
                }
            }
        },
        "mcir.TbDataDiskUpsizeReq": {
            "type": "object",
            "required": [
                "diskSize"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "diskSize": {
                    "type": "string"
                }
            }
        },
        "mcir.TbFirewallRuleInfo": {
            "type": "object",
            "required": [
                "direction",
                "fromPort",
                "ipprotocol",
                "toPort"
            ],
            "properties": {
                "cidr": {
                    "type": "string"
                },
                "direction": {
                    "description": "` + "`" + `json:\"direction\"` + "`" + `",
                    "type": "string"
                },
                "fromPort": {
                    "description": "` + "`" + `json:\"fromPort\"` + "`" + `",
                    "type": "string"
                },
                "ipprotocol": {
                    "description": "` + "`" + `json:\"ipProtocol\"` + "`" + `",
                    "type": "string"
                },
                "toPort": {
                    "description": "` + "`" + `json:\"toPort\"` + "`" + `",
                    "type": "string"
                }
            }
        },
        "mcir.TbFirewallRulesWrapper": {
            "type": "object",
            "properties": {
                "firewallRules": {
                    "description": "validate:\"required\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.TbFirewallRuleInfo"
                    }
                }
            }
        },
        "mcir.TbImageInfo": {
            "type": "object",
            "properties": {
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionName": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string"
                },
                "cspImageId": {
                    "type": "string"
                },
                "cspImageName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "guestOS": {
                    "description": "Windows7, Ubuntu etc.",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "description": "required to save in RDB",
                    "type": "string"
                },
                "status": {
                    "description": "available, unavailable",
                    "type": "string"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the MCIR in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                }
            }
        },
        "mcir.TbImageReq": {
            "type": "object",
            "required": [
                "connectionName",
                "cspImageId",
                "name"
            ],
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "cspImageId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "mcir.TbSecurityGroupInfo": {
            "type": "object",
            "properties": {
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionName": {
                    "type": "string"
                },
                "cspSecurityGroupId": {
                    "type": "string"
                },
                "cspSecurityGroupName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "firewallRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.TbFirewallRuleInfo"
                    }
                },
                "id": {
                    "type": "string"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "name": {
                    "type": "string"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the MCIR in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "vNetId": {
                    "type": "string"
                }
            }
        },
        "mcir.TbSecurityGroupReq": {
            "type": "object",
            "required": [
                "connectionName",
                "name",
                "vNetId"
            ],
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "cspSecurityGroupId": {
                    "description": "CspSecurityGroupId is required to register object from CSP (option=register)",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "firewallRules": {
                    "description": "validate:\"required\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.TbFirewallRuleInfo"
                    }
                },
                "name": {
                    "type": "string"
                },
                "vNetId": {
                    "type": "string"
                }
            }
        },
        "mcir.TbSpecInfo": {
            "type": "object",
            "properties": {
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionName": {
                    "type": "string"
                },
                "costPerHour": {
                    "type": "number"
                },
                "cspSpecName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "ebsBwMbps": {
                    "type": "integer"
                },
                "evaluationScore01": {
                    "type": "number"
                },
                "evaluationScore02": {
                    "type": "number"
                },
                "evaluationScore03": {
                    "type": "number"
                },
                "evaluationScore04": {
                    "type": "number"
                },
                "evaluationScore05": {
                    "type": "number"
                },
                "evaluationScore06": {
                    "type": "number"
                },
                "evaluationScore07": {
                    "type": "number"
                },
                "evaluationScore08": {
                    "type": "number"
                },
                "evaluationScore09": {
                    "type": "number"
                },
                "evaluationScore10": {
                    "type": "number"
                },
                "evaluationStatus": {
                    "type": "string"
                },
                "gpuMemGiB": {
                    "type": "number"
                },
                "gpuModel": {
                    "type": "string"
                },
                "gpuP2p": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "maxNumStorage": {
                    "type": "integer"
                },
                "maxTotalStorageTiB": {
                    "type": "integer"
                },
                "memGiB": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "description": "required to save in RDB",
                    "type": "string"
                },
                "netBwGbps": {
                    "type": "integer"
                },
                "numCore": {
                    "type": "integer"
                },
                "numGpu": {
                    "type": "integer"
                },
                "numStorage": {
                    "type": "integer"
                },
                "numvCPU": {
                    "type": "integer"
                },
                "orderInFilteredResult": {
                    "type": "integer"
                },
                "osType": {
                    "type": "string"
                },
                "providerName": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string"
                },
                "rootDiskSize": {
                    "type": "string"
                },
                "rootDiskType": {
                    "type": "string"
                },
                "storageGiB": {
                    "type": "integer"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the MCIR in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                }
            }
        },
        "mcir.TbSpecReq": {
            "type": "object",
            "required": [
                "connectionName",
                "cspSpecName",
                "name"
            ],
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "cspSpecName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "mcir.TbSshKeyInfo": {
            "type": "object",
            "properties": {
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionName": {
                    "type": "string"
                },
                "cspSshKeyId": {
                    "description": "CspSshKeyId used for CSP-native identifier (either Name or ID)",
                    "type": "string"
                },
                "cspSshKeyName": {
                    "description": "CspSshKeyName used for CB-Spider identifier",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the MCIR in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "username": {
                    "type": "string"
                },
                "verifiedUsername": {
                    "type": "string"
                }
            }
        },
        "mcir.TbSshKeyReq": {
            "type": "object",
            "required": [
                "connectionName",
                "name"
            ],
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "cspSshKeyId": {
                    "description": "Fields for \"Register existing SSH keys\" feature\nCspSshKeyId is required to register object from CSP (option=register)",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "verifiedUsername": {
                    "type": "string"
                }
            }
        },
        "mcir.TbSubnetInfo": {
            "type": "object",
            "required": [
                "ipv4_CIDR",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ipv4_CIDR": {
                    "type": "string"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "mcir.TbSubnetReq": {
            "type": "object",
            "required": [
                "ipv4_CIDR",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "ipv4_CIDR": {
                    "type": "string"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "mcir.TbVNetInfo": {
            "type": "object",
            "properties": {
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cidrBlock": {
                    "type": "string"
                },
                "connectionName": {
                    "type": "string"
                },
                "cspVNetId": {
                    "type": "string"
                },
                "cspVNetName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnetInfoList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.TbSubnetInfo"
                    }
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the MCIR in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                }
            }
        },
        "mcir.TbVNetReq": {
            "type": "object",
            "required": [
                "connectionName",
                "name"
            ],
            "properties": {
                "cidrBlock": {
                    "type": "string"
                },
                "connectionName": {
                    "type": "string"
                },
                "cspVNetId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "subnetInfoList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcir.TbSubnetReq"
                    }
                }
            }
        },
        "mcis.AgentInstallContent": {
            "type": "object",
            "properties": {
                "mcisId": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "vmId": {
                    "type": "string"
                },
                "vmIp": {
                    "type": "string"
                }
            }
        },
        "mcis.AgentInstallContentWrapper": {
            "type": "object",
            "properties": {
                "resultArray": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.AgentInstallContent"
                    }
                }
            }
        },
        "mcis.AutoAction": {
            "type": "object",
            "properties": {
                "actionType": {
                    "type": "string",
                    "enum": [
                        "ScaleOut",
                        "ScaleIn"
                    ],
                    "example": "ScaleOut"
                },
                "placementAlgo": {
                    "type": "string",
                    "example": "random"
                },
                "postCommand": {
                    "description": "PostCommand is field for providing command to VMs after its creation. example:\"wget https://raw.githubusercontent.com/cloud-barista/cb-tumblebug/main/scripts/setweb.sh -O ~/setweb.sh; chmod +x ~/setweb.sh; sudo ~/setweb.sh\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/mcis.McisCmdReq"
                        }
                    ]
                },
                "vmDynamicReq": {
                    "$ref": "#/definitions/mcis.TbVmDynamicReq"
                }
            }
        },
        "mcis.AutoCondition": {
            "type": "object",
            "properties": {
                "evaluationPeriod": {
                    "type": "string",
                    "example": "10"
                },
                "evaluationValue": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "metric": {
                    "type": "string",
                    "example": "cpu"
                },
                "operand": {
                    "type": "string",
                    "example": "80"
                },
                "operator": {
                    "type": "string",
                    "enum": [
                        "\u003c",
                        "\u003c=",
                        "\u003e",
                        "\u003e="
                    ],
                    "example": "\u003e="
                }
            }
        },
        "mcis.BenchmarkInfo": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "elapsed": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "resultarray": {
                    "description": "struct-element cycle ?",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.BenchmarkInfo"
                    }
                },
                "specid": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "mcis.BenchmarkInfoArray": {
            "type": "object",
            "properties": {
                "resultarray": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.BenchmarkInfo"
                    }
                }
            }
        },
        "mcis.CheckMcisDynamicReqInfo": {
            "type": "object",
            "required": [
                "reqCheck"
            ],
            "properties": {
                "reqCheck": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.CheckVmDynamicReqInfo"
                    }
                }
            }
        },
        "mcis.CheckVmDynamicReqInfo": {
            "type": "object",
            "properties": {
                "connectionConfigCandidates": {
                    "description": "ConnectionConfigCandidates will provide ConnectionConfig options",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "$ref": "#/definitions/common.Region"
                },
                "systemMessage": {
                    "description": "Latest system message such as error message",
                    "type": "string",
                    "example": "Failed because ..."
                },
                "vmSpec": {
                    "$ref": "#/definitions/mcir.TbSpecInfo"
                }
            }
        },
        "mcis.DeploymentPlan": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/mcis.FilterInfo"
                },
                "limit": {
                    "type": "string",
                    "enum": [
                        "1",
                        "2",
                        "...",
                        "30",
                        "..."
                    ],
                    "example": "5"
                },
                "priority": {
                    "$ref": "#/definitions/mcis.PriorityInfo"
                }
            }
        },
        "mcis.FilterCondition": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.Operation"
                    }
                },
                "metric": {
                    "type": "string",
                    "enum": [
                        "cpu",
                        "memory",
                        "cost"
                    ],
                    "example": "cpu"
                }
            }
        },
        "mcis.FilterInfo": {
            "type": "object",
            "properties": {
                "policy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.FilterCondition"
                    }
                }
            }
        },
        "mcis.InspectResource": {
            "type": "object",
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "resourceOverview": {
                    "$ref": "#/definitions/mcis.resourceCountOverview"
                },
                "resourceType": {
                    "type": "string"
                },
                "resources": {
                    "$ref": "#/definitions/mcis.resourcesByManageType"
                },
                "systemMessage": {
                    "type": "string"
                }
            }
        },
        "mcis.InspectResourceAllResult": {
            "type": "object",
            "properties": {
                "availableConnection": {
                    "type": "integer"
                },
                "cspOnlyOverview": {
                    "$ref": "#/definitions/mcis.inspectOverview"
                },
                "elapsedTime": {
                    "type": "integer"
                },
                "inspectResult": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.InspectResourceResult"
                    }
                },
                "registeredConnection": {
                    "type": "integer"
                },
                "tumblebugOverview": {
                    "$ref": "#/definitions/mcis.inspectOverview"
                }
            }
        },
        "mcis.InspectResourceResult": {
            "type": "object",
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "cspOnlyOverview": {
                    "$ref": "#/definitions/mcis.inspectOverview"
                },
                "elapsedTime": {
                    "type": "integer"
                },
                "systemMessage": {
                    "type": "string"
                },
                "tumblebugOverview": {
                    "$ref": "#/definitions/mcis.inspectOverview"
                }
            }
        },
        "mcis.JSONResult": {
            "type": "object"
        },
        "mcis.McisAccessInfo": {
            "type": "object",
            "properties": {
                "mcisId": {
                    "type": "string"
                },
                "mcisNlbListener": {
                    "$ref": "#/definitions/mcis.McisAccessInfo"
                },
                "mcisSubGroupAccessInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.McisSubGroupAccessInfo"
                    }
                }
            }
        },
        "mcis.McisCmdReq": {
            "type": "object",
            "required": [
                "command"
            ],
            "properties": {
                "command": {
                    "type": "string",
                    "example": "sudo apt-get install ..."
                },
                "userName": {
                    "type": "string",
                    "example": "cb-user"
                }
            }
        },
        "mcis.McisConnectionConfigCandidatesReq": {
            "type": "object",
            "required": [
                "commonSpec"
            ],
            "properties": {
                "commonSpec": {
                    "description": "CommonSpec is field for id of a spec in common namespace",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "aws-ap-northeast-2-t2-small",
                        "gcp-us-west1-g1-small"
                    ]
                }
            }
        },
        "mcis.McisPolicyInfo": {
            "type": "object",
            "properties": {
                "Id": {
                    "description": "MCIS Id (generated ID by the Name)",
                    "type": "string"
                },
                "Name": {
                    "description": "MCIS Name (for request)",
                    "type": "string"
                },
                "actionLog": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "policy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.Policy"
                    }
                }
            }
        },
        "mcis.McisPolicyReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "policy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.Policy"
                    }
                }
            }
        },
        "mcis.McisStatusInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:yes)",
                    "type": "string",
                    "example": "[yes, no]"
                },
                "label": {
                    "description": "Label is for describing the mcis in a keyword (any string can be used)",
                    "type": "string",
                    "example": "User custom label"
                },
                "masterIp": {
                    "type": "string",
                    "example": "32.201.134.113"
                },
                "masterSSHPort": {
                    "type": "string"
                },
                "masterVmId": {
                    "type": "string",
                    "example": "vm-asiaeast1-cb-01"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "statusCount": {
                    "$ref": "#/definitions/mcis.StatusCountInfo"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mcis in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "targetAction": {
                    "type": "string"
                },
                "targetStatus": {
                    "type": "string"
                },
                "vm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.TbVmStatusInfo"
                    }
                }
            }
        },
        "mcis.McisSubGroupAccessInfo": {
            "type": "object",
            "properties": {
                "mcisVmAccessInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.McisVmAccessInfo"
                    }
                },
                "nlbListener": {
                    "$ref": "#/definitions/mcis.TbNLBListenerInfo"
                },
                "subGroupId": {
                    "type": "string"
                }
            }
        },
        "mcis.McisVmAccessInfo": {
            "type": "object",
            "properties": {
                "privateIP": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "publicIP": {
                    "type": "string"
                },
                "sshPort": {
                    "type": "string"
                },
                "vmId": {
                    "type": "string"
                },
                "vmUserAccount": {
                    "type": "string"
                },
                "vmUserPassword": {
                    "type": "string"
                }
            }
        },
        "mcis.MonResultSimple": {
            "type": "object",
            "properties": {
                "err": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "vmId": {
                    "type": "string"
                }
            }
        },
        "mcis.MonResultSimpleResponse": {
            "type": "object",
            "properties": {
                "mcisId": {
                    "type": "string"
                },
                "mcisMonitoring": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.MonResultSimple"
                    }
                },
                "nsId": {
                    "type": "string"
                }
            }
        },
        "mcis.NLBListenerReq": {
            "type": "object",
            "properties": {
                "port": {
                    "description": "1-65535",
                    "type": "string",
                    "example": "80"
                },
                "protocol": {
                    "description": "TCP|UDP",
                    "type": "string",
                    "example": "TCP"
                }
            }
        },
        "mcis.NetworkReq": {
            "type": "object",
            "properties": {
                "etcdEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "PUBLIC_IP_1:2379",
                        "PUBLIC_IP_2:2379",
                        "..."
                    ]
                },
                "serviceEndpoint": {
                    "type": "string",
                    "example": "localhost:8053"
                }
            }
        },
        "mcis.Operation": {
            "type": "object",
            "properties": {
                "operand": {
                    "description": "10, 70, 80, 98, ...",
                    "type": "string",
                    "enum": [
                        "4",
                        "8",
                        ".."
                    ],
                    "example": "4"
                },
                "operator": {
                    "description": "\u003e=, \u003c=, ==",
                    "type": "string",
                    "enum": [
                        "\u003e=",
                        "\u003c=",
                        "=="
                    ],
                    "example": "\u003c="
                }
            }
        },
        "mcis.ParameterKeyVal": {
            "type": "object",
            "properties": {
                "key": {
                    "description": "coordinate",
                    "type": "string",
                    "enum": [
                        "coordinateClose",
                        "coordinateWithin",
                        "coordinateFair"
                    ],
                    "example": "coordinateClose"
                },
                "val": {
                    "description": "[\"Latitude,Longitude\",\"12,543\",..,\"31,433\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "44.146838/-116.411403"
                    ]
                }
            }
        },
        "mcis.Policy": {
            "type": "object",
            "properties": {
                "autoAction": {
                    "$ref": "#/definitions/mcis.AutoAction"
                },
                "autoCondition": {
                    "$ref": "#/definitions/mcis.AutoCondition"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "mcis.PriorityCondition": {
            "type": "object",
            "properties": {
                "metric": {
                    "type": "string",
                    "enum": [
                        "location",
                        "cost",
                        "random",
                        "performance",
                        "latency"
                    ],
                    "example": "location"
                },
                "parameter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.ParameterKeyVal"
                    }
                },
                "weight": {
                    "type": "string",
                    "enum": [
                        "0.1",
                        "0.2",
                        "..."
                    ],
                    "example": "0.3"
                }
            }
        },
        "mcis.PriorityInfo": {
            "type": "object",
            "properties": {
                "policy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.PriorityCondition"
                    }
                }
            }
        },
        "mcis.RegionInfo": {
            "type": "object",
            "properties": {
                "region": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "mcis.RegisterResourceAllResult": {
            "type": "object",
            "properties": {
                "availableConnection": {
                    "type": "integer"
                },
                "elapsedTime": {
                    "type": "integer"
                },
                "registerationOverview": {
                    "$ref": "#/definitions/mcis.registerationOverview"
                },
                "registerationResult": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.RegisterResourceResult"
                    }
                },
                "registeredConnection": {
                    "type": "integer"
                }
            }
        },
        "mcis.RegisterResourceResult": {
            "type": "object",
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "elapsedTime": {
                    "type": "integer"
                },
                "registerationOutputs": {
                    "$ref": "#/definitions/common.IdList"
                },
                "registerationOverview": {
                    "$ref": "#/definitions/mcis.registerationOverview"
                },
                "systemMessage": {
                    "type": "string"
                }
            }
        },
        "mcis.RestGetAllBenchmarkRequest": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                }
            }
        },
        "mcis.RestGetAllMcisPolicyResponse": {
            "type": "object",
            "properties": {
                "mcisPolicy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.McisPolicyInfo"
                    }
                }
            }
        },
        "mcis.RestGetAllMcisResponse": {
            "type": "object",
            "properties": {
                "mcis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.TbMcisInfo"
                    }
                }
            }
        },
        "mcis.RestGetAllMcisStatusResponse": {
            "type": "object",
            "properties": {
                "mcis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.McisStatusInfo"
                    }
                }
            }
        },
        "mcis.RestGetAllNLBResponse": {
            "type": "object",
            "properties": {
                "nlb": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.TbNLBInfo"
                    }
                }
            }
        },
        "mcis.RestGetBenchmarkRequest": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                }
            }
        },
        "mcis.RestPostCmdMcisResponse": {
            "type": "object",
            "properties": {
                "mcisId": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "vmId": {
                    "type": "string"
                },
                "vmIp": {
                    "type": "string"
                }
            }
        },
        "mcis.RestPostCmdMcisResponseWrapper": {
            "type": "object",
            "properties": {
                "resultArray": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.RestPostCmdMcisResponse"
                    }
                }
            }
        },
        "mcis.RestPostCmdMcisVmResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "mcis.SpiderImageType": {
            "type": "string",
            "enum": [
                "PublicImage",
                "MyImage"
            ],
            "x-enum-varnames": [
                "PublicImage",
                "MyImage"
            ]
        },
        "mcis.SpiderVMInfo": {
            "type": "object",
            "properties": {
                "cspid": {
                    "description": "VM ID given by CSP (required for registering VM)",
                    "type": "string"
                },
                "dataDiskIIDs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.IID"
                    }
                },
                "dataDiskNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "iid": {
                    "description": "Fields for response",
                    "allOf": [
                        {
                            "$ref": "#/definitions/common.IID"
                        }
                    ]
                },
                "imageIId": {
                    "$ref": "#/definitions/common.IID"
                },
                "imageName": {
                    "type": "string"
                },
                "imageType": {
                    "$ref": "#/definitions/mcis.SpiderImageType"
                },
                "keyPairIId": {
                    "$ref": "#/definitions/common.IID"
                },
                "keyPairName": {
                    "type": "string"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "name": {
                    "description": "Fields for request",
                    "type": "string"
                },
                "networkInterface": {
                    "description": "ex) eth0",
                    "type": "string"
                },
                "privateDNS": {
                    "type": "string"
                },
                "privateIP": {
                    "type": "string"
                },
                "publicDNS": {
                    "type": "string"
                },
                "publicIP": {
                    "type": "string"
                },
                "region": {
                    "description": "ex) {us-east1, us-east1-c} or {ap-northeast-2}",
                    "allOf": [
                        {
                            "$ref": "#/definitions/mcis.RegionInfo"
                        }
                    ]
                },
                "rootDeviceName": {
                    "description": "\"/dev/sda1\", ...",
                    "type": "string"
                },
                "rootDiskSize": {
                    "description": "\"default\", \"50\", \"1000\" (GB)",
                    "type": "string"
                },
                "rootDiskType": {
                    "description": "\"SSD(gp2)\", \"Premium SSD\", ...",
                    "type": "string"
                },
                "securityGroupIIds": {
                    "description": "AWS, ex) sg-0b7452563e1121bb6",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.IID"
                    }
                },
                "securityGroupNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sshaccessPoint": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "subnetIID": {
                    "description": "AWS, ex) subnet-8c4a53e4",
                    "allOf": [
                        {
                            "$ref": "#/definitions/common.IID"
                        }
                    ]
                },
                "subnetName": {
                    "type": "string"
                },
                "vmspecName": {
                    "description": "Fields for both request and response",
                    "type": "string"
                },
                "vmuserId": {
                    "description": "ex) user1",
                    "type": "string"
                },
                "vmuserPasswd": {
                    "type": "string"
                },
                "vpcIID": {
                    "$ref": "#/definitions/common.IID"
                },
                "vpcname": {
                    "type": "string"
                }
            }
        },
        "mcis.StatusCountInfo": {
            "type": "object",
            "properties": {
                "countCreating": {
                    "description": "CountCreating is for counting Creating",
                    "type": "integer"
                },
                "countFailed": {
                    "description": "CountFailed is for counting Failed",
                    "type": "integer"
                },
                "countRebooting": {
                    "description": "CountRebooting is for counting Rebooting",
                    "type": "integer"
                },
                "countResuming": {
                    "description": "CountResuming is for counting Resuming",
                    "type": "integer"
                },
                "countRunning": {
                    "description": "CountRunning is for counting Running",
                    "type": "integer"
                },
                "countSuspended": {
                    "description": "CountSuspended is for counting Suspended",
                    "type": "integer"
                },
                "countSuspending": {
                    "description": "CountSuspending is for counting Suspending",
                    "type": "integer"
                },
                "countTerminated": {
                    "description": "CountTerminated is for counting Terminated",
                    "type": "integer"
                },
                "countTerminating": {
                    "description": "CountTerminating is for counting Terminating",
                    "type": "integer"
                },
                "countTotal": {
                    "description": "CountTotal is for Total VMs",
                    "type": "integer"
                },
                "countUndefined": {
                    "description": "CountUndefined is for counting Undefined",
                    "type": "integer"
                }
            }
        },
        "mcis.TbIdNameInDetailInfo": {
            "type": "object",
            "properties": {
                "idInCsp": {
                    "type": "string"
                },
                "idInSp": {
                    "type": "string"
                },
                "idInTb": {
                    "type": "string"
                },
                "nameInCsp": {
                    "type": "string"
                }
            }
        },
        "mcis.TbMcisDynamicReq": {
            "type": "object",
            "required": [
                "name",
                "vm"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Made in CB-TB"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:yes)",
                    "type": "string",
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "no"
                },
                "label": {
                    "description": "Label is for describing the mcis in a keyword (any string can be used)",
                    "type": "string",
                    "example": "DynamicVM"
                },
                "name": {
                    "type": "string",
                    "example": "mcis01"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mcis in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": ""
                },
                "vm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.TbVmDynamicReq"
                    }
                }
            }
        },
        "mcis.TbMcisInfo": {
            "type": "object",
            "properties": {
                "configureCloudAdaptiveNetwork": {
                    "description": "ConfigureCloudAdaptiveNetwork is an option to configure Cloud Adaptive Network (CLADNet) ([yes/no] default:yes)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "yes"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:yes)",
                    "type": "string",
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "yes"
                },
                "label": {
                    "description": "Label is for describing the mcis in a keyword (any string can be used)",
                    "type": "string",
                    "example": "User custom label"
                },
                "name": {
                    "type": "string"
                },
                "newVmList": {
                    "description": "List of IDs for new VMs. Return IDs if the VMs are newly added. This field should be used for return body only.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "placementAlgo": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "statusCount": {
                    "$ref": "#/definitions/mcis.StatusCountInfo"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mcis in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "systemMessage": {
                    "description": "Latest system message such as error message",
                    "type": "string",
                    "example": "Failed because ..."
                },
                "targetAction": {
                    "type": "string"
                },
                "targetStatus": {
                    "type": "string"
                },
                "vm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.TbVmInfo"
                    }
                }
            }
        },
        "mcis.TbMcisReq": {
            "type": "object",
            "required": [
                "name",
                "vm"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Made in CB-TB"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:yes)",
                    "type": "string",
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "no"
                },
                "label": {
                    "description": "Label is for describing the mcis in a keyword (any string can be used)",
                    "type": "string",
                    "example": "custom tag"
                },
                "name": {
                    "type": "string",
                    "example": "mcis01"
                },
                "placementAlgo": {
                    "type": "string"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mcis in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": ""
                },
                "vm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.TbVmReq"
                    }
                }
            }
        },
        "mcis.TbNLBAddRemoveVMReq": {
            "type": "object",
            "properties": {
                "targetGroup": {
                    "$ref": "#/definitions/mcis.TbNLBTargetGroupInfo"
                }
            }
        },
        "mcis.TbNLBHealthCheckerInfo": {
            "type": "object",
            "properties": {
                "interval": {
                    "description": "secs, Interval time between health checks.",
                    "type": "integer",
                    "example": 10
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "port": {
                    "description": "Listener Port or 1-65535",
                    "type": "string",
                    "example": "22"
                },
                "protocol": {
                    "description": "TCP|HTTP|HTTPS",
                    "type": "string",
                    "example": "TCP"
                },
                "threshold": {
                    "description": "num, The number of continuous health checks to change the VM status.",
                    "type": "integer",
                    "example": 3
                },
                "timeout": {
                    "description": "secs, Waiting time to decide an unhealthy VM when no response.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "mcis.TbNLBHealthCheckerReq": {
            "type": "object",
            "properties": {
                "interval": {
                    "description": "secs, Interval time between health checks.",
                    "type": "string",
                    "example": "default"
                },
                "threshold": {
                    "description": "num, The number of continuous health checks to change the VM status.",
                    "type": "string",
                    "example": "default"
                },
                "timeout": {
                    "description": "secs, Waiting time to decide an unhealthy VM when no response.",
                    "type": "string",
                    "example": "default"
                }
            }
        },
        "mcis.TbNLBInfo": {
            "type": "object",
            "properties": {
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionName": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "cspNLBId": {
                    "type": "string"
                },
                "cspNLBName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "healthChecker": {
                    "$ref": "#/definitions/mcis.TbNLBHealthCheckerInfo"
                },
                "id": {
                    "type": "string"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "listener": {
                    "$ref": "#/definitions/mcis.TbNLBListenerInfo"
                },
                "location": {
                    "$ref": "#/definitions/common.GeoLocation"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "description": "REGION(V) | GLOBAL",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the MCIR in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "targetGroup": {
                    "$ref": "#/definitions/mcis.TbNLBTargetGroupInfo"
                },
                "type": {
                    "description": "PUBLIC(V) | INTERNAL",
                    "type": "string"
                }
            }
        },
        "mcis.TbNLBListenerInfo": {
            "type": "object",
            "properties": {
                "dnsName": {
                    "description": "Optional, Auto Generated and attached",
                    "type": "string",
                    "example": "ns01-group-cd3.elb.ap-northeast-2.amazonaws.com"
                },
                "ip": {
                    "description": "Auto Generated and attached",
                    "type": "string",
                    "example": "x.x.x.x"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "port": {
                    "description": "1-65535",
                    "type": "string",
                    "example": "80"
                },
                "protocol": {
                    "description": "TCP|UDP",
                    "type": "string",
                    "example": "TCP"
                }
            }
        },
        "mcis.TbNLBReq": {
            "type": "object",
            "required": [
                "healthChecker",
                "listener",
                "scope",
                "targetGroup",
                "type"
            ],
            "properties": {
                "cspNLBId": {
                    "description": "Existing NLB (used only for option=register)",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "healthChecker": {
                    "description": "HealthChecker",
                    "allOf": [
                        {
                            "$ref": "#/definitions/mcis.TbNLBHealthCheckerReq"
                        }
                    ]
                },
                "listener": {
                    "description": "Frontend",
                    "allOf": [
                        {
                            "$ref": "#/definitions/mcis.NLBListenerReq"
                        }
                    ]
                },
                "scope": {
                    "description": "REGION(V) | GLOBAL",
                    "type": "string",
                    "enum": [
                        "REGION",
                        "GLOBAL"
                    ],
                    "example": "REGION"
                },
                "targetGroup": {
                    "description": "Backend",
                    "allOf": [
                        {
                            "$ref": "#/definitions/mcis.TbNLBTargetGroupReq"
                        }
                    ]
                },
                "type": {
                    "description": "PUBLIC(V) | INTERNAL",
                    "type": "string",
                    "enum": [
                        "PUBLIC",
                        "INTERNAL"
                    ],
                    "example": "PUBLIC"
                }
            }
        },
        "mcis.TbNLBTargetGroupInfo": {
            "type": "object",
            "properties": {
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.KeyValue"
                    }
                },
                "port": {
                    "description": "Listener Port or 1-65535",
                    "type": "string",
                    "example": "80"
                },
                "protocol": {
                    "description": "TCP|HTTP|HTTPS",
                    "type": "string",
                    "example": "TCP"
                },
                "subGroupId": {
                    "type": "string",
                    "example": "g1"
                },
                "vms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "mcis.TbNLBTargetGroupReq": {
            "type": "object",
            "properties": {
                "port": {
                    "description": "Listener Port or 1-65535",
                    "type": "string",
                    "example": "80"
                },
                "protocol": {
                    "description": "TCP|HTTP|HTTPS",
                    "type": "string",
                    "example": "TCP"
                },
                "subGroupId": {
                    "type": "string",
                    "example": "g1"
                }
            }
        },
        "mcis.TbScaleOutSubGroupReq": {
            "type": "object",
            "required": [
                "numVMsToAdd"
            ],
            "properties": {
                "numVMsToAdd": {
                    "description": "Define addtional VMs to scaleOut",
                    "type": "string",
                    "example": "2"
                }
            }
        },
        "mcis.TbVmDynamicReq": {
            "type": "object",
            "required": [
                "commonImage",
                "commonSpec"
            ],
            "properties": {
                "commonImage": {
                    "description": "CommonImage is field for id of a image in common namespace",
                    "type": "string",
                    "example": "ubuntu18.04"
                },
                "commonSpec": {
                    "description": "CommonSpec is field for id of a spec in common namespace",
                    "type": "string",
                    "example": "aws-ap-northeast-2-t2-small"
                },
                "connectionName": {
                    "description": "if ConnectionName is given, the VM tries to use associtated credential.\nif not, it will use predefined ConnectionName in Spec objects",
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "label": {
                    "type": "string",
                    "example": "DynamicVM"
                },
                "name": {
                    "description": "VM name or subGroup name if is (not empty) \u0026\u0026 (\u003e 0). If it is a group, actual VM name will be generated with -N postfix.",
                    "type": "string",
                    "example": "g1-1"
                },
                "rootDiskSize": {
                    "description": "\"default\", Integer (GB): [\"50\", ..., \"1000\"]",
                    "type": "string",
                    "example": "default, 30, 42, ..."
                },
                "rootDiskType": {
                    "description": "\"\", \"default\", \"TYPE1\", AWS: [\"standard\", \"gp2\", \"gp3\"], Azure: [\"PremiumSSD\", \"StandardSSD\", \"StandardHDD\"], GCP: [\"pd-standard\", \"pd-balanced\", \"pd-ssd\", \"pd-extreme\"], ALIBABA: [\"cloud_efficiency\", \"cloud\", \"cloud_essd\"], TENCENT: [\"CLOUD_PREMIUM\", \"CLOUD_SSD\"]",
                    "type": "string",
                    "example": "default, TYPE1, ..."
                },
                "subGroupSize": {
                    "description": "if subGroupSize is (not empty) \u0026\u0026 (\u003e 0), subGroup will be gernetad. VMs will be created accordingly.",
                    "type": "string",
                    "example": "3"
                },
                "vmUserPassword default:": {
                    "type": "string"
                }
            }
        },
        "mcis.TbVmInfo": {
            "type": "object",
            "properties": {
                "connectionConfig": {
                    "$ref": "#/definitions/common.ConnConfig"
                },
                "connectionName": {
                    "type": "string"
                },
                "createdTime": {
                    "description": "Created time",
                    "type": "string",
                    "example": "2022-11-10 23:00:00"
                },
                "cspViewVmDetail": {
                    "$ref": "#/definitions/mcis.SpiderVMInfo"
                },
                "dataDiskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "idByCSP": {
                    "description": "CSP managed ID or Name",
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/common.GeoLocation"
                },
                "monAgentStatus": {
                    "description": "Montoring agent status",
                    "type": "string",
                    "example": "[installed, notInstalled, failed]"
                },
                "name": {
                    "type": "string"
                },
                "networkAgentStatus": {
                    "description": "NetworkAgent status",
                    "type": "string",
                    "example": "[notInstalled, installing, installed, failed]"
                },
                "privateDNS": {
                    "type": "string"
                },
                "privateIP": {
                    "type": "string"
                },
                "publicDNS": {
                    "type": "string"
                },
                "publicIP": {
                    "type": "string"
                },
                "region": {
                    "description": "AWS, ex) {us-east1, us-east1-c} or {ap-northeast-2}",
                    "allOf": [
                        {
                            "$ref": "#/definitions/mcis.RegionInfo"
                        }
                    ]
                },
                "rootDeviceName": {
                    "type": "string"
                },
                "rootDiskSize": {
                    "type": "string"
                },
                "rootDiskType": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specId": {
                    "type": "string"
                },
                "sshKeyId": {
                    "type": "string"
                },
                "sshPort": {
                    "type": "string"
                },
                "status": {
                    "description": "Required by CB-Tumblebug",
                    "type": "string"
                },
                "subGroupId": {
                    "description": "defined if the VM is in a group",
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "systemMessage": {
                    "description": "Latest system message such as error message",
                    "type": "string",
                    "example": "Failed because ..."
                },
                "targetAction": {
                    "type": "string"
                },
                "targetStatus": {
                    "type": "string"
                },
                "vNetId": {
                    "type": "string"
                },
                "vmUserAccount": {
                    "type": "string"
                },
                "vmUserPassword": {
                    "type": "string"
                }
            }
        },
        "mcis.TbVmReq": {
            "type": "object",
            "required": [
                "connectionName",
                "imageId",
                "name",
                "securityGroupIds",
                "specId",
                "sshKeyId",
                "subnetId",
                "vNetId"
            ],
            "properties": {
                "connectionName": {
                    "type": "string",
                    "example": "testcloud01-seoul"
                },
                "dataDiskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "idByCsp": {
                    "description": "CSP managed ID or Name (required for option=register)",
                    "type": "string",
                    "example": "i-014fa6ede6ada0b2c"
                },
                "imageId": {
                    "description": "ImageType        string   ` + "`" + `json:\"imageType\"` + "`" + `",
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "description": "VM name or subGroup name if is (not empty) \u0026\u0026 (\u003e 0). If it is a group, actual VM name will be generated with -N postfix.",
                    "type": "string",
                    "example": "g1-1"
                },
                "rootDiskSize": {
                    "description": "\"default\", Integer (GB): [\"50\", ..., \"1000\"]",
                    "type": "string",
                    "example": "default, 30, 42, ..."
                },
                "rootDiskType": {
                    "description": "\"\", \"default\", \"TYPE1\", AWS: [\"standard\", \"gp2\", \"gp3\"], Azure: [\"PremiumSSD\", \"StandardSSD\", \"StandardHDD\"], GCP: [\"pd-standard\", \"pd-balanced\", \"pd-ssd\", \"pd-extreme\"], ALIBABA: [\"cloud_efficiency\", \"cloud\", \"cloud_ssd\"], TENCENT: [\"CLOUD_PREMIUM\", \"CLOUD_SSD\"]",
                    "type": "string",
                    "example": "default, TYPE1, ..."
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specId": {
                    "type": "string"
                },
                "sshKeyId": {
                    "type": "string"
                },
                "subGroupSize": {
                    "description": "if subGroupSize is (not empty) \u0026\u0026 (\u003e 0), subGroup will be gernetad. VMs will be created accordingly.",
                    "type": "string",
                    "example": "3"
                },
                "subnetId": {
                    "type": "string"
                },
                "vNetId": {
                    "type": "string"
                },
                "vmUserAccount": {
                    "type": "string"
                },
                "vmUserPassword": {
                    "type": "string"
                }
            }
        },
        "mcis.TbVmSnapshotReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "aws-ap-southeast-1-snapshot"
                }
            }
        },
        "mcis.TbVmStatusInfo": {
            "type": "object",
            "properties": {
                "createdTime": {
                    "description": "Created time",
                    "type": "string",
                    "example": "2022-11-10 23:00:00"
                },
                "cspVmId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/common.GeoLocation"
                },
                "monAgentStatus": {
                    "description": "Montoring agent status",
                    "type": "string",
                    "example": "[installed, notInstalled, failed]"
                },
                "name": {
                    "type": "string"
                },
                "nativeStatus": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "sshPort": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "systemMessage": {
                    "description": "Latest system message such as error message",
                    "type": "string",
                    "example": "Failed because ..."
                },
                "targetAction": {
                    "type": "string"
                },
                "targetStatus": {
                    "type": "string"
                }
            }
        },
        "mcis.inspectOverview": {
            "type": "object",
            "properties": {
                "customImage": {
                    "type": "integer"
                },
                "dataDisk": {
                    "type": "integer"
                },
                "nlb": {
                    "type": "integer"
                },
                "securityGroup": {
                    "type": "integer"
                },
                "sshKey": {
                    "type": "integer"
                },
                "vNet": {
                    "type": "integer"
                },
                "vm": {
                    "type": "integer"
                }
            }
        },
        "mcis.registerationOverview": {
            "type": "object",
            "properties": {
                "customImage": {
                    "type": "integer"
                },
                "dataDisk": {
                    "type": "integer"
                },
                "failed": {
                    "type": "integer"
                },
                "nlb": {
                    "type": "integer"
                },
                "securityGroup": {
                    "type": "integer"
                },
                "sshKey": {
                    "type": "integer"
                },
                "vNet": {
                    "type": "integer"
                },
                "vm": {
                    "type": "integer"
                }
            }
        },
        "mcis.resourceCountOverview": {
            "type": "object",
            "properties": {
                "onCspOnly": {
                    "type": "integer"
                },
                "onCspTotal": {
                    "type": "integer"
                },
                "onSpider": {
                    "type": "integer"
                },
                "onTumblebug": {
                    "type": "integer"
                }
            }
        },
        "mcis.resourceOnCsp": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.resourceOnCspInfo"
                    }
                }
            }
        },
        "mcis.resourceOnCspInfo": {
            "type": "object",
            "properties": {
                "idByCsp": {
                    "type": "string"
                },
                "refNameOrId": {
                    "type": "string"
                }
            }
        },
        "mcis.resourceOnSpider": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.resourceOnSpiderInfo"
                    }
                }
            }
        },
        "mcis.resourceOnSpiderInfo": {
            "type": "object",
            "properties": {
                "idByCsp": {
                    "type": "string"
                },
                "idBySp": {
                    "type": "string"
                }
            }
        },
        "mcis.resourceOnTumblebug": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcis.resourceOnTumblebugInfo"
                    }
                }
            }
        },
        "mcis.resourceOnTumblebugInfo": {
            "type": "object",
            "properties": {
                "idByCsp": {
                    "type": "string"
                },
                "idByTb": {
                    "type": "string"
                },
                "mcisId": {
                    "type": "string"
                },
                "nsId": {
                    "type": "string"
                },
                "objectKey": {
                    "type": "string"
                }
            }
        },
        "mcis.resourcesByManageType": {
            "type": "object",
            "properties": {
                "onCspOnly": {
                    "$ref": "#/definitions/mcis.resourceOnCsp"
                },
                "onCspTotal": {
                    "$ref": "#/definitions/mcis.resourceOnCsp"
                },
                "onSpider": {
                    "$ref": "#/definitions/mcis.resourceOnSpider"
                },
                "onTumblebug": {
                    "$ref": "#/definitions/mcis.resourceOnTumblebug"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "latest",
	Host:             "",
	BasePath:         "/tumblebug",
	Schemes:          []string{},
	Title:            "CB-Tumblebug REST API",
	Description:      "CB-Tumblebug REST API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
