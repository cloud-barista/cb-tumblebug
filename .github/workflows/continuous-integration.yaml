# This workflow performs continuous integration (CI).
# This workflow will build the container image for amd64 arch. (as a basic build test)
name: Continuous Integration (CI)

on:
  # On pull-request event with detailed condition below.
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - ".all-contributorsrc"
      - ".gitignore"
      - "LICENSE"
      - "CODEOWNERS"
      - "assets/**"
      - "scripts/**"
      - "src/testclient/scripts/**"
      - "docs/**"

jobs:
  # The job key (i.e., ID) is "build-source-code"
  build-source-code:
    # Job name is "Building source code"
    # This job runs on Ubuntu-latest (Ubuntu 22.04 LTS checked on 2023-12-13)
    # See https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
    name: Build source code
    strategy:
      matrix:
        go-version: ["1.23"]
        os: [ubuntu-22.04]
        #os: [ubuntu-22.04, ubuntu-20.04, windows-2022, windows-2019]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{matrix.go-version}}

      - name: Build
        run: make # cd src/ && go build -v -o cb-tumblebug

      # - name: Test
      #   run: go test -v ./...

  # The job key is "build-container-image"
  build-container-image:
    # Job name is "Build a container image"
    name: Build a container image

    # This job runs on Ubuntu-latest (Ubuntu 22.04 LTS checked on 2023-12-13)
    # See https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
    runs-on: ubuntu-22.04
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:latest

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build image
        env:
          DOCKER_BUILDKIT: 1
          IMAGE_NAME: ${{ github.event.repository.name }}
        run: docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache,mode=max . --file Dockerfile --tag $IMAGE_NAME